"use client";

import React, { useState } from "react";
import { Modal } from "./ui/Modal";
import { Input } from "./ui/Input";
import { Button } from "./ui/Button";

interface BulkRewardModalProps {
  isOpen: boolean;
  onClose: () => void;
  onApplyToAll: (amount: number, description: string) => void; // –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–º–µ–Ω–∏—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ –≤—Å–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º
}

export const BulkRewardModal: React.FC<BulkRewardModalProps> = ({
  isOpen,
  onClose,
  onApplyToAll
}) => {
  const [amount, setAmount] = useState("");
  const [description, setDescription] = useState("");

  const handleApply = () => {
    const value = parseFloat(amount);
    if (!isNaN(value) && value !== 0) {
      onApplyToAll(value, description || "–ú–∞—Å—Å–æ–≤–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ");
      setAmount("");
      setDescription("");
      onClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    }
  };

  return (
    <Modal
      isOpen={isOpen}
      onClose={onClose}
      title="–ù–∞—á–∏—Å–ª–∏—Ç—å –≤—Å–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º"
      data-oid="bulk-reward-modal"
    >
      <div className="space-y-6">
        {/* –§–æ—Ä–º–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è */}
        <div className="space-y-3">
          <h3 className="text-lg font-semibold text-white">
            –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤—Å–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º
          </h3>

          <Input
            label="–°—É–º–º–∞"
            type="number"
            value={amount}
            onChange={setAmount}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 100"
            data-oid="bulk-amount-input"
          />

          <Input
            label="–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
            value={description}
            onChange={setDescription}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü—Ä–µ–º–∏—è –∑–∞ –ø—Ä–æ—à–ª—ã–π —Å–µ–∑–æ–Ω"
            data-oid="bulk-description-input"
          />

          <div className="flex space-x-3 pt-2">
            <Button
              onClick={handleApply}
              disabled={!amount || parseFloat(amount) === 0}
              className="flex-1"
              data-oid="bulk-apply-button"
            >
              üéÅ –ù–∞—á–∏—Å–ª–∏—Ç—å –≤—Å–µ–º
            </Button>
            <Button
              onClick={onClose}
              variant="secondary"
              className="flex-1"
              data-oid="bulk-cancel-button"
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
          </div>
        </div>

        <div className="text-sm text-gray-400 p-3 bg-gray-800 rounded">
          <p>–°—É–º–º–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ –±–∞–ª–∞–Ω—Å—É <strong>–∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞</strong>.</p>
          <p>–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç—Ä–∞–∑–∏—Ç—Å—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞.</p>
        </div>
      </div>
    </Modal>
  );
};